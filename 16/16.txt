8. Поясните понятие GraphQL.
формальный язык запросов; особенности:
позволяет делать агрегированные запросы
(можно в одном запросе запросить все необходимые данные),использует систему типов

9. Поясните понятие схема GraphQL.
, как «схема» — это то, что позволяет организовывать создание, чтение, обновление и удаление данных в вашем приложении
(то есть — перед нами четыре базовые функции, используемые при работе с хранилищами данных, которые обычно обозначают акронимом CRUD — create, read, update, delete).

10. Расшифруйте аббревиатуру SDL GraphQL.
Язык определения схемы - Schema Definition Language (SDL)

11. Поясните понятие resolver GraphQL.
Резолверы — это функции, которые запускаются каждый раз, когда запрос запрашивает поле.
Когда реализация GraphQL получает запрос, она выполняет резолвер для каждого поля.
Если резолвер возвращает поле типа Object, то GraphQL запускает резолвер-функцию этого поля.
Когда все резолверы возвращают скалярные значения, цепочка замыкается, и запрос получает готовый JSON-результат.

12. Поясните понятие query GraphQL.
специальных типа объектов
Queries fetch data – like a GET in rest
(получение данных)

13. Поясните понятие mutation GraphQL.
Mutations change data – like a DELETE or a POST in REST(изменение данных).

14. Поясните понятие subscription GraphQL.
Они полностью аналогичны queries и все что применимо к queries, подходит для subscriptions.
Подписка - это операция GraphQL, которая позволяет вам подписываться на события на сервере. Вы будете получать обновления в режиме реального времени с сервера каждый раз, когда происходит событие, на которое вы подписались.

15. Поясните понятие context GraphQL.
Context - это ваш объект, который создается для каждого GraphQL-запроса и доступен во всех resolve методах. Может содержать подключения к базам данных, разные служебные методы и данные (например текущую информацию из HTTP-request'а).

16. Поясните схему работы модуля graphql
На практике GraphQL API построен на трёх основных строительных блоках: на схеме (schema), запросах (queries) и распознавателях (resolvers).
Работа с сервером GraphQL всегда начинается с разработки схемы (Schema). Она состоит из двух взаимосвязанных объектов: TypeDefs и Resolvers.
Выше были описаны основные типы GraphQL. Чтобы сервер мог с ними работать, эти типы необходимо определить. Объект typeDef определяет список типов, которые доступны в проекте. 
Resolver или распознаватель — функция, которая возвращает данные для определённого поля. Resolver’ы возвращают данные того типа, который определён в схеме.

17. Поясните следующие компоненты subscription, interface, enum, fragment, union схемы GraphQL
В GraphQL есть интерфейсы.
Интерфейс - это именованный абстрактный тип который представляет собой набор именованных полей и их аргументов.
GraphQLObjectType может реализовать в дальнейшем этот интерфейс, при этом должны быть объявлены все поля и аргументы, которые определены в интерфейсе.
Поля в интерфейсе могут иметь следующие типы: Scalar, Object, Enum, Interface, Union, а также эти пять базовых типов обернутых в List или NonNull.